{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport { Russian } from \"flatpickr/dist/l10n/ru.js\";\nimport { German } from \"flatpickr/dist/l10n/de.js\";  // Немецкий\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n// Пример уведомления\n// iziToast.success({\n//     title: 'Успех',\n//     message: 'Операция выполнена успешно!',\n//     position: 'topRight'\n// });\n\n// iziToast.error({\n//     title: 'Ошибка',\n//     message: 'Что-то пошло не так...',\n//     position: 'topRight'\n// });\niziToast.info({\n    title: 'Информация',\n    message: 'Выбери дату для запуска обратного отщёта.',\n    messageColor: 'white',\n    position: 'center',\n    timeout: 5000,\n    progressBar: true,\n    close: true,\n    backgroundColor: \"rgb(0 140 255)\"\n});\n\n\nconst input = document.getElementById('datetime-picker');\nconst btnStart = document.querySelector('button[data-start]');\nlet userSelectedDate = null;\nlet countdownInterval = null;\n// кнопка не активная.\nbtnStart.disabled = true;\n\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nflatpickr(\"#datetime-picker\", {\n    enableTime: true,\n    dateFormat: \"d.m.Y   H:i\",\n    // отк. мобильную версию.\n    disableMobile: true,\n    locale: Russian, // язык интерфейса\n    // locale: German, // переключение на немецкий\n\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates, _, instance) {\n        userSelectedDate = selectedDates[0];\n\n        //if(календарь открыт   или както попала не коректная дата     или дата находится в прошлом)\n        if (instance.isOpen || !(userSelectedDate instanceof Date) || userSelectedDate <= new Date()) {\n            iziToast.warning({\n                title: 'Некорректная дата',\n                message: 'Выберите дату в будущем!',\n                messageColor: 'red',\n                position: 'center',\n                timeout: 4000,\n                progressBar: true,\n                close: true,\n                backgroundColor: 'rgb(0 140 255)',\n            });\n            return;\n        }\n        // input активен\n        input.disabled = false;\n        // кнопка активная.\n        btnStart.disabled = false;\n        btnStart.classList.replace(\"notActive\", \"button\");\n    }\n});\n\n\nbtnStart.addEventListener('click', () => {\n    // input не активен\n    input.disabled = true;\n    // блокируем кнопку после запуска\n    btnStart.disabled = true;\n    btnStart.classList.replace(\"button\", \"notActive\");\n\n    countdownInterval = setInterval(() => {\n        const now = new Date();\n        const delta = userSelectedDate - now;\n\n        if (delta <= 0) {\n            clearInterval(countdownInterval);\n            updateTimerDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n            iziToast.success({\n                title: 'Внимание',\n                message: 'Время вышло!',\n                messageColor: 'white',\n                position: 'center',\n                timeout: 4000,\n                progressBar: true,\n                close: true,\n                backgroundColor: 'rgb(0 140 255)',\n            });\n            // input активен\n            input.disabled = false;\n            return;\n        }\n\n        const timeLeft = convertMs(delta);\n        updateTimerDisplay(timeLeft);\n    }, 1000);\n});\n\nfunction updateTimerDisplay({ days, hours, minutes, seconds }) {\n    document.querySelector('[data-days]').textContent = String(days).padStart(2, '0');\n    document.querySelector('[data-hours]').textContent = String(hours).padStart(2, '0');\n    document.querySelector('[data-minutes]').textContent = String(minutes).padStart(2, '0');\n    document.querySelector('[data-seconds]').textContent = String(seconds).padStart(2, '0');\n}\n\n\n// Flatpickr поддерживает множество языков: ru, fr, de, es, zh, и другие.\n// Все они находятся в папке dist/l10n/."],"names":["iziToast","input","btnStart","userSelectedDate","countdownInterval","convertMs","ms","days","hours","minutes","seconds","flatpickr","Russian","selectedDates","_","instance","delta","updateTimerDisplay","timeLeft"],"mappings":"sJAoBAA,EAAS,KAAK,CACV,MAAO,aACP,QAAS,4CACT,aAAc,QACd,SAAU,SACV,QAAS,IACT,YAAa,GACb,MAAO,GACP,gBAAiB,gBACrB,CAAC,EAGD,MAAMC,EAAQ,SAAS,eAAe,iBAAiB,EACjDC,EAAW,SAAS,cAAc,oBAAoB,EAC5D,IAAIC,EAAmB,KACnBC,EAAoB,KAExBF,EAAS,SAAW,GAGpB,SAASG,EAAUC,EAAI,CAQnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEAC,EAAU,mBAAoB,CAC1B,WAAY,GACZ,WAAY,cAEZ,cAAe,GACf,OAAQC,EAAO,QAGf,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAeC,EAAGC,EAAU,CAIhC,GAHAZ,EAAmBU,EAAc,CAAC,EAG9BE,EAAS,QAAU,EAAEZ,aAA4B,OAASA,GAAoB,IAAI,KAAQ,CAC1FH,EAAS,QAAQ,CACb,MAAO,oBACP,QAAS,2BACT,aAAc,MACd,SAAU,SACV,QAAS,IACT,YAAa,GACb,MAAO,GACP,gBAAiB,gBACjC,CAAa,EACD,MACH,CAEDC,EAAM,SAAW,GAEjBC,EAAS,SAAW,GACpBA,EAAS,UAAU,QAAQ,YAAa,QAAQ,CACnD,CACL,CAAC,EAGDA,EAAS,iBAAiB,QAAS,IAAM,CAErCD,EAAM,SAAW,GAEjBC,EAAS,SAAW,GACpBA,EAAS,UAAU,QAAQ,SAAU,WAAW,EAEhDE,EAAoB,YAAY,IAAM,CAElC,MAAMY,EAAQb,EADF,IAAI,KAGhB,GAAIa,GAAS,EAAG,CACZ,cAAcZ,CAAiB,EAC/Ba,EAAmB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAChEjB,EAAS,QAAQ,CACb,MAAO,WACP,QAAS,eACT,aAAc,QACd,SAAU,SACV,QAAS,IACT,YAAa,GACb,MAAO,GACP,gBAAiB,gBACjC,CAAa,EAEDC,EAAM,SAAW,GACjB,MACH,CAED,MAAMiB,EAAWb,EAAUW,CAAK,EAChCC,EAAmBC,CAAQ,CAC9B,EAAE,GAAI,CACX,CAAC,EAED,SAASD,EAAmB,CAAE,KAAAV,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC3D,SAAS,cAAc,aAAa,EAAE,YAAc,OAAOH,CAAI,EAAE,SAAS,EAAG,GAAG,EAChF,SAAS,cAAc,cAAc,EAAE,YAAc,OAAOC,CAAK,EAAE,SAAS,EAAG,GAAG,EAClF,SAAS,cAAc,gBAAgB,EAAE,YAAc,OAAOC,CAAO,EAAE,SAAS,EAAG,GAAG,EACtF,SAAS,cAAc,gBAAgB,EAAE,YAAc,OAAOC,CAAO,EAAE,SAAS,EAAG,GAAG,CAC1F"}